{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _PatternUtils = require('./PatternUtils');\n\nfunction routeParamsChanged(route, prevState, nextState) {\n  if (!route.path) return false;\n\n  var paramNames = _PatternUtils.getParamNames(route.path);\n\n  return paramNames.some(function (paramName) {\n    return prevState.params[paramName] !== nextState.params[paramName];\n  });\n}\n/**\n * Returns an object of { leaveRoutes, enterRoutes } determined by\n * the change from prevState to nextState. We leave routes if either\n * 1) they are not in the next state or 2) they are in the next state\n * but their params have changed (i.e. /users/123 => /users/456).\n *\n * leaveRoutes are ordered starting at the leaf route of the tree\n * we're leaving up to the common parent route. enterRoutes are ordered\n * from the top of the tree we're entering down to the leaf route.\n */\n\n\nfunction computeChangedRoutes(prevState, nextState) {\n  var prevRoutes = prevState && prevState.routes;\n  var nextRoutes = nextState.routes;\n  var leaveRoutes = undefined,\n      enterRoutes = undefined;\n\n  if (prevRoutes) {\n    leaveRoutes = prevRoutes.filter(function (route) {\n      return nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);\n    }); // onLeave hooks start at the leaf route.\n\n    leaveRoutes.reverse();\n    enterRoutes = nextRoutes.filter(function (route) {\n      return prevRoutes.indexOf(route) === -1 || leaveRoutes.indexOf(route) !== -1;\n    });\n  } else {\n    leaveRoutes = [];\n    enterRoutes = nextRoutes;\n  }\n\n  return {\n    leaveRoutes: leaveRoutes,\n    enterRoutes: enterRoutes\n  };\n}\n\nexports['default'] = computeChangedRoutes;\nmodule.exports = exports['default'];","map":{"version":3,"names":["exports","__esModule","_PatternUtils","require","routeParamsChanged","route","prevState","nextState","path","paramNames","getParamNames","some","paramName","params","computeChangedRoutes","prevRoutes","routes","nextRoutes","leaveRoutes","undefined","enterRoutes","filter","indexOf","reverse","module"],"sources":["C:/Users/Elite/Desktop/madrasatech/node_modules/react-router/lib/computeChangedRoutes.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _PatternUtils = require('./PatternUtils');\n\nfunction routeParamsChanged(route, prevState, nextState) {\n  if (!route.path) return false;\n\n  var paramNames = _PatternUtils.getParamNames(route.path);\n\n  return paramNames.some(function (paramName) {\n    return prevState.params[paramName] !== nextState.params[paramName];\n  });\n}\n\n/**\n * Returns an object of { leaveRoutes, enterRoutes } determined by\n * the change from prevState to nextState. We leave routes if either\n * 1) they are not in the next state or 2) they are in the next state\n * but their params have changed (i.e. /users/123 => /users/456).\n *\n * leaveRoutes are ordered starting at the leaf route of the tree\n * we're leaving up to the common parent route. enterRoutes are ordered\n * from the top of the tree we're entering down to the leaf route.\n */\nfunction computeChangedRoutes(prevState, nextState) {\n  var prevRoutes = prevState && prevState.routes;\n  var nextRoutes = nextState.routes;\n\n  var leaveRoutes = undefined,\n      enterRoutes = undefined;\n  if (prevRoutes) {\n    leaveRoutes = prevRoutes.filter(function (route) {\n      return nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);\n    });\n\n    // onLeave hooks start at the leaf route.\n    leaveRoutes.reverse();\n\n    enterRoutes = nextRoutes.filter(function (route) {\n      return prevRoutes.indexOf(route) === -1 || leaveRoutes.indexOf(route) !== -1;\n    });\n  } else {\n    leaveRoutes = [];\n    enterRoutes = nextRoutes;\n  }\n\n  return {\n    leaveRoutes: leaveRoutes,\n    enterRoutes: enterRoutes\n  };\n}\n\nexports['default'] = computeChangedRoutes;\nmodule.exports = exports['default'];"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA3B;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,SAAnC,EAA8CC,SAA9C,EAAyD;EACvD,IAAI,CAACF,KAAK,CAACG,IAAX,EAAiB,OAAO,KAAP;;EAEjB,IAAIC,UAAU,GAAGP,aAAa,CAACQ,aAAd,CAA4BL,KAAK,CAACG,IAAlC,CAAjB;;EAEA,OAAOC,UAAU,CAACE,IAAX,CAAgB,UAAUC,SAAV,EAAqB;IAC1C,OAAON,SAAS,CAACO,MAAV,CAAiBD,SAAjB,MAAgCL,SAAS,CAACM,MAAV,CAAiBD,SAAjB,CAAvC;EACD,CAFM,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,oBAAT,CAA8BR,SAA9B,EAAyCC,SAAzC,EAAoD;EAClD,IAAIQ,UAAU,GAAGT,SAAS,IAAIA,SAAS,CAACU,MAAxC;EACA,IAAIC,UAAU,GAAGV,SAAS,CAACS,MAA3B;EAEA,IAAIE,WAAW,GAAGC,SAAlB;EAAA,IACIC,WAAW,GAAGD,SADlB;;EAEA,IAAIJ,UAAJ,EAAgB;IACdG,WAAW,GAAGH,UAAU,CAACM,MAAX,CAAkB,UAAUhB,KAAV,EAAiB;MAC/C,OAAOY,UAAU,CAACK,OAAX,CAAmBjB,KAAnB,MAA8B,CAAC,CAA/B,IAAoCD,kBAAkB,CAACC,KAAD,EAAQC,SAAR,EAAmBC,SAAnB,CAA7D;IACD,CAFa,CAAd,CADc,CAKd;;IACAW,WAAW,CAACK,OAAZ;IAEAH,WAAW,GAAGH,UAAU,CAACI,MAAX,CAAkB,UAAUhB,KAAV,EAAiB;MAC/C,OAAOU,UAAU,CAACO,OAAX,CAAmBjB,KAAnB,MAA8B,CAAC,CAA/B,IAAoCa,WAAW,CAACI,OAAZ,CAAoBjB,KAApB,MAA+B,CAAC,CAA3E;IACD,CAFa,CAAd;EAGD,CAXD,MAWO;IACLa,WAAW,GAAG,EAAd;IACAE,WAAW,GAAGH,UAAd;EACD;;EAED,OAAO;IACLC,WAAW,EAAEA,WADR;IAELE,WAAW,EAAEA;EAFR,CAAP;AAID;;AAEDpB,OAAO,CAAC,SAAD,CAAP,GAAqBc,oBAArB;AACAU,MAAM,CAACxB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB"},"metadata":{},"sourceType":"script"}