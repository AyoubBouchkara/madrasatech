{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _PatternUtils = require('./PatternUtils');\n\nfunction deepEqual(a, b) {\n  if (a == b) return true;\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return deepEqual(item, b[index]);\n    });\n  }\n\n  if (typeof a === 'object') {\n    for (var p in a) {\n      if (!a.hasOwnProperty(p)) {\n        continue;\n      }\n\n      if (a[p] === undefined) {\n        if (b[p] !== undefined) {\n          return false;\n        }\n      } else if (!b.hasOwnProperty(p)) {\n        return false;\n      } else if (!deepEqual(a[p], b[p])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction paramsAreActive(paramNames, paramValues, activeParams) {\n  // FIXME: This doesn't work on repeated params in activeParams.\n  return paramNames.every(function (paramName, index) {\n    return String(paramValues[index]) === String(activeParams[paramName]);\n  });\n}\n\nfunction getMatchingRouteIndex(pathname, activeRoutes, activeParams) {\n  var remainingPathname = pathname,\n      paramNames = [],\n      paramValues = [];\n\n  for (var i = 0, len = activeRoutes.length; i < len; ++i) {\n    var route = activeRoutes[i];\n    var pattern = route.path || '';\n\n    if (pattern.charAt(0) === '/') {\n      remainingPathname = pathname;\n      paramNames = [];\n      paramValues = [];\n    }\n\n    if (remainingPathname !== null) {\n      var matched = _PatternUtils.matchPattern(pattern, remainingPathname);\n\n      remainingPathname = matched.remainingPathname;\n      paramNames = [].concat(paramNames, matched.paramNames);\n      paramValues = [].concat(paramValues, matched.paramValues);\n    }\n\n    if (remainingPathname === '' && route.path && paramsAreActive(paramNames, paramValues, activeParams)) return i;\n  }\n\n  return null;\n}\n/**\n * Returns true if the given pathname matches the active routes\n * and params.\n */\n\n\nfunction routeIsActive(pathname, routes, params, indexOnly) {\n  var i = getMatchingRouteIndex(pathname, routes, params);\n\n  if (i === null) {\n    // No match.\n    return false;\n  } else if (!indexOnly) {\n    // Any match is good enough.\n    return true;\n  } // If any remaining routes past the match index have paths, then we can't\n  // be on the index route.\n\n\n  return routes.slice(i + 1).every(function (route) {\n    return !route.path;\n  });\n}\n/**\n * Returns true if all key/value pairs in the given query are\n * currently active.\n */\n\n\nfunction queryIsActive(query, activeQuery) {\n  if (activeQuery == null) return query == null;\n  if (query == null) return true;\n  return deepEqual(query, activeQuery);\n}\n/**\n * Returns true if a <Link> to the given pathname/query combination is\n * currently active.\n */\n\n\nfunction isActive(pathname, query, indexOnly, location, routes, params) {\n  if (location == null) return false;\n  if (!routeIsActive(pathname, routes, params, indexOnly)) return false;\n  return queryIsActive(query, location.query);\n}\n\nexports['default'] = isActive;\nmodule.exports = exports['default'];","map":{"version":3,"names":["exports","__esModule","_PatternUtils","require","deepEqual","a","b","Array","isArray","length","every","item","index","p","hasOwnProperty","undefined","String","paramsAreActive","paramNames","paramValues","activeParams","paramName","getMatchingRouteIndex","pathname","activeRoutes","remainingPathname","i","len","route","pattern","path","charAt","matched","matchPattern","concat","routeIsActive","routes","params","indexOnly","slice","queryIsActive","query","activeQuery","isActive","location","module"],"sources":["C:/Users/Elite/Desktop/madrasatech/node_modules/react-router/lib/isActive.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _PatternUtils = require('./PatternUtils');\n\nfunction deepEqual(a, b) {\n  if (a == b) return true;\n\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return deepEqual(item, b[index]);\n    });\n  }\n\n  if (typeof a === 'object') {\n    for (var p in a) {\n      if (!a.hasOwnProperty(p)) {\n        continue;\n      }\n\n      if (a[p] === undefined) {\n        if (b[p] !== undefined) {\n          return false;\n        }\n      } else if (!b.hasOwnProperty(p)) {\n        return false;\n      } else if (!deepEqual(a[p], b[p])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction paramsAreActive(paramNames, paramValues, activeParams) {\n  // FIXME: This doesn't work on repeated params in activeParams.\n  return paramNames.every(function (paramName, index) {\n    return String(paramValues[index]) === String(activeParams[paramName]);\n  });\n}\n\nfunction getMatchingRouteIndex(pathname, activeRoutes, activeParams) {\n  var remainingPathname = pathname,\n      paramNames = [],\n      paramValues = [];\n\n  for (var i = 0, len = activeRoutes.length; i < len; ++i) {\n    var route = activeRoutes[i];\n    var pattern = route.path || '';\n\n    if (pattern.charAt(0) === '/') {\n      remainingPathname = pathname;\n      paramNames = [];\n      paramValues = [];\n    }\n\n    if (remainingPathname !== null) {\n      var matched = _PatternUtils.matchPattern(pattern, remainingPathname);\n      remainingPathname = matched.remainingPathname;\n      paramNames = [].concat(paramNames, matched.paramNames);\n      paramValues = [].concat(paramValues, matched.paramValues);\n    }\n\n    if (remainingPathname === '' && route.path && paramsAreActive(paramNames, paramValues, activeParams)) return i;\n  }\n\n  return null;\n}\n\n/**\n * Returns true if the given pathname matches the active routes\n * and params.\n */\nfunction routeIsActive(pathname, routes, params, indexOnly) {\n  var i = getMatchingRouteIndex(pathname, routes, params);\n\n  if (i === null) {\n    // No match.\n    return false;\n  } else if (!indexOnly) {\n    // Any match is good enough.\n    return true;\n  }\n\n  // If any remaining routes past the match index have paths, then we can't\n  // be on the index route.\n  return routes.slice(i + 1).every(function (route) {\n    return !route.path;\n  });\n}\n\n/**\n * Returns true if all key/value pairs in the given query are\n * currently active.\n */\nfunction queryIsActive(query, activeQuery) {\n  if (activeQuery == null) return query == null;\n\n  if (query == null) return true;\n\n  return deepEqual(query, activeQuery);\n}\n\n/**\n * Returns true if a <Link> to the given pathname/query combination is\n * currently active.\n */\nfunction isActive(pathname, query, indexOnly, location, routes, params) {\n  if (location == null) return false;\n\n  if (!routeIsActive(pathname, routes, params, indexOnly)) return false;\n\n  return queryIsActive(query, location.query);\n}\n\nexports['default'] = isActive;\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script"}